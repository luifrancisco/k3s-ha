---
# - name: install k3s server - main
#   hosts: main
#   become: true
#   tasks:
#     - name: install k3s server init on main
#       script: scripts/k3s-server-init.sh 
#       args:
#         creates: /var/lib/rancher

# Prepare files for kube-vip

# K3s installation start
- name: install k3s server - main  
  hosts: main 
  become: true 
  tasks:
    - name: install k3s server join on main 
      shell: curl -sfL https://get.k3s.io | K3S_TOKEN=15700772202 sh -s - server --cluster-init --flannel-backend none --disable-network-policy --cluster-cidr=10.40.0.0/16 --disable=traefik --tls-san=10.20.0.99
      register: main_init_logs
    - name: print main_init_logs output
      debug: 
        msg: "{{ main_init_logs.stdout_lines }}"
    - name: print main_init_logs errors
      debug: 
        msg: "{{ main_init_logs.stderr_lines }}"
    - name: Check k3s service status
      systemd:
        name: k3s
      register: k3s_service_status
    - name: print k3s service status
      debug: 
        msg: "{{ k3s_service_status.status.ActiveState }}"
- name: Configure kube-config for 'luis' user
  hosts: main
  become: true
  tasks:
    - name: Create .kube directory if it does not exist
      file:
        path: /home/luis/.kube/
        state: directory
        owner: luis
        group: luis
        mode: '0744'
    - name: copy kube-config to luis .kube directory
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /home/luis/.kube/config
        remote_src: yes
        owner: luis
        group: luis
    - name: update .bashrc
      blockinfile:
        dest: /home/luis/.bashrc
        content: "# Manually added config\nexport KUBECONFIG=~/.kube/config\nsource <(kubectl completion bash)\nalias k=kubectl"
- name: Configure kube-config for 'ansible' user
  hosts: main
  become: true
  tasks:
    - name: Create .kube directory if it does not exist
      file:
        path: /home/ansible/.kube/
        state: directory
        owner: ansible
        group: ansible
        mode: '0744'
    - name: copy kube-config to ansible .kube directory
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /home/ansible/.kube/config
        remote_src: yes
        owner: ansible
        group: ansible
    - name: update .bashrc
      blockinfile:
        dest: /home/ansible/.bashrc
        content: "# Manually added config\nexport KUBECONFIG=~/.kube/config\nsource <(kubectl completion bash)\nalias k=kubectl"

- name: Configure kube-config for 'root' user
  hosts: main
  become: true
  tasks:
    - name: Create .kube directory if it does not exist
      file:
        path: /root/.kube/
        state: directory
        owner: root
        group: root
        mode: '0744'
    - name: copy kube-config to root .kube directory
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /root/.kube/config
        remote_src: yes
        owner: root
        group: root
    - name: update .bashrc
      blockinfile:
        dest: /root/.bashrc
        content: "# Manually added config\nexport KUBECONFIG=~/.kube/config\nsource <(kubectl completion bash)\nalias k=kubectl"
# Prepare kube-vip yaml files
- name: Prepare kube-vip yaml files on main
  hosts: main 
  become: true 
  tasks:
    - name: download rbac yaml
      shell: curl https://kube-vip.io/manifests/rbac.yaml > /var/lib/rancher/k3s/server/manifests/kube-vip-rbac.yaml
    - name: generate kube-vip-ds yaml
      shell: |
        export VIP=
        export INTERFACE=eth0
        KVVERSION=$(curl -sL https://api.github.com/repos/kube-vip/kube-vip/releases | jq -r ".[0].name")
        alias kube-vip="ctr image pull ghcr.io/kube-vip/kube-vip:$KVVERSION; ctr run --rm --net-host ghcr.io/kube-vip/kube-vip:$KVVERSION vip /kube-vip"
        kube-vip manifest daemonset \
            --interface {{ _interface }} \
            --address {{ _vip }} \
            --inCluster \
            --taint \
            --controlplane \
            --services \
            --arp \
            --leaderElection > /var/lib/rancher/k3s/server/manifests/kube-vip-ds.yaml
      register: kubevip_yaml_logs
    - name: print kubevip_yaml_logs output
      debug: 
        msg: "{{ kubevip_yaml_logs.stdout_lines }}"
    - name: print kubevip_yaml_logs errors
      debug: 
        msg: "{{ kubevip_yaml_logs.stderr_lines }}"
    - name: download rbac yaml
      shell: curl https://kube-vip.io/manifests/rbac.yaml > /var/lib/rancher/k3s/server/manifests/kube-vip-rbac.yaml
